---
# yamllint disable rule:line-length

name: OSIO workload
on:  # yamllint disable-line rule:truthy
  push:
  pull_request:
  schedule:
    - cron: "7 4 * * 1"  # 4:07 every Monday

env:
  IMAGE: "quay.io/ocsci/osio-workload"

jobs:
  build:
    name: Build workload container
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v1

      - name: Build container
        run: |
          cd osio-workload
          ./build.sh "${IMAGE}"
          docker inspect "${IMAGE}"

      - name: Export container image
        run: docker save -o /tmp/osio-image.tar ${IMAGE}

      - name: Save container as artifact
        uses: actions/upload-artifact@v1
        with:
          name: osio-container
          path: /tmp/osio-image.tar


  push:
    name: "Push container to registry"
    runs-on: ubuntu-latest
    needs: build
    if: >
      (github.event_name == 'push' || github.event_name == 'schedule') &&
      (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))

    steps:
      - name: Load container artifact
        uses: actions/download-artifact@v1
        with:
          name: osio-container
          path: /tmp

      - name: Import container image
        run: |
          docker load -i /tmp/osio-image.tar
          docker inspect ${IMAGE}

      - name: Login to registry
        # If the registry server is specified in the image name, we use that.
        # If the server isn't in the image name, default to docker.io
        run: |
          [[ "${IMAGE}" =~ ^([^/]+)/[^/]+/[^/]+ ]] && REGISTRY="${BASH_REMATCH[1]}" || REGISTRY="docker.io"
          echo "Attempting docker login to: ${REGISTRY}"
          echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin ${REGISTRY}

      - name: Push to registry (latest)
        if: >
          (github.event_name == 'push' || github.event_name == 'schedule') &&
          github.ref == 'refs/heads/master'
        run: |
          docker push "${IMAGE}"

      - name: Push to registry (version tag)
        if: >
          (github.event_name == 'push' || github.event_name == 'schedule') &&
          startsWith(github.ref, 'refs/tags/v')
        run: |
          [[ "${{ github.ref }}" =~ ^refs/tags/v([0-9]+\..*) ]] || exit 0
          TAG="${BASH_REMATCH[1]}"
          echo "Pushing to $TAG"
          docker tag "${IMAGE}" "${IMAGE}:${TAG}"
          docker push "${IMAGE}:${TAG}"
